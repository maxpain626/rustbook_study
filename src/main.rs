// fn main() {
//     let mut x: i32 = 5;
//     x = x * 2;
//     println!("Hello, world! Your number is: {}", x);
// }

// Как создать мобильное приложение на Rust?
// 1. Установите Rust toolchain
// 2. Установите cargo-apk
// 3. Создайте новый проект
// 4. Создайте файл AndroidManifest.xml
// 5. Создайте файл build.rs
// 6. Создайте файл Cargo.toml
// 7. Создайте файл src/main.rs
// 8. Создайте файл src/lib.rs

// 9. Запустите cargo apk build
// 10. Запустите cargo apk run


// В Rust есть несколько встроенных функций, которые помогают разработчикам в их работе. Вот некоторые из них:

// * **println!** — выводит строку текста на экран;
// * **input!** — считывает строку текста с клавиатуры;
// * **assert_eq!** — сравнивает два значения и проверяет их равенство;
// * **vec!** — создаёт вектор из набора значений;
// * **if let** — позволяет сопоставлять шаблоны внутри условных выражений;
// * **match** — используется для сопоставления шаблонов и выбора подходящего блока кода;
// * **try!** — оборачивает выражение в блок try-catch и обрабатывает возможные исключения;
// * **panic!** — вызывает панику программы при возникновении ошибки;
// * **loop** — создаёт бесконечный цикл;
// * **break** — прерывает выполнение цикла;
// * **continue** — переходит к следующей итерации цикла.

// Эти функции являются лишь частью того, что предлагает язык программирования Rust. Они помогают упростить код и сделать его более читаемым и удобным для понимания.

/// Prints the sum of two numbers, 5 and 6.
fn main() {
    print_sum(5, 6);
}

fn print_sum(x: i32, y: i32) {
    println! ("Numbers sum is: {}", x + y);
}

